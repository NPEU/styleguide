/*
    NeoCLEAR Theme
    Note this theme file needs to be loaded *in addition* to the base 'style' file.
*/
/* --| START THEME |----------------------------------------------------------------------------- */
/*
    Many (soon all?) of these patterns are themeable, so they are configured and imported here
    (separately) so that they can be imported into other theme files without resulting in
    re-declared base-styles. E.g. bands defines a set of size classes, these only need to appear in
    the stylesheet once. The file that includes *this* file should set `$theme-only: true` to toggle
    this behaviour.
*/
/*

*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

    https://coolors.co/50514f-f25f5c-ffe066-247ba0-70c1b3

|-------------------------------------------------------------------------------------------------*/
/* --| FUNCTIONS AND MIXINS |-------------------------------------------------------------------- */
/*
    Global sizes
*/
/* --| Component Patterns |---------------------------------------------------------------------- */
/*

*/
/*$brochure-spacing-unit: $f__base-rem-space-unit;
$brochure--border-or-outline: false;
@import "component-patterns/_brochure.scss";*/
/*
    The `height: 100%;` in the `.card` class below allows the card to fill it's container (if inside,
    say, a list-grid). However, it doesn't work in Safari OSX/iOS.
    Applying a `card-wrap` class to a list item to make those items flex-containers seems to work
    OK, but perhaps this would be better abstracted as a `fill-height` class or something?

    Note IE10-11 flexbox for card, main and body causes problems when in other flex contexts.
    For IE10 I'm just leaving off the -ms prefixes - it's still usable without flex.
*/
/*
$card-cta--border-width: 1px !default;
$card-cta--border-style: solid !default;
$card-cta--border-radius: 3px !default;
*/
/*
$card--link-color: false !default;
$card--link-color--alt: false !default;
$card--link-has-border-bottom: false !default;
$card--link-border-bottom: false !default;
$card--link-border-bottom--alt: false !default;

// If we've specified a link color for the card, but not an alt state (e.g. hover)
// then generate one
@if $card--link-color != false and $card--link-color--alt == false {
    $card--link-color--alt: darken($card--link-color, 10%) !default;;
}

// If we've specified a link color for the card, and we want bottom borders, generate the borders:
@if $card--link-color != false and $card--link-has-border-bottom != false {
    $card--link-border-bottom: 1px solid lighten($card--link-color, 20%) !default;
    $card--link-border-bottom--alt: 2px solid lighten($card--link-color--alt, 30%) !default;
}
*/
/*
$card-button--text-color: #fff !default;
$card-button--background-color: $card--base-color !default;
$card-button--background-color-alt: lighten($card--base-color, 20%) !default;
$card-button--border-color: darken($card--base-color, 20%) !default;
*/
/*
    .c-card-wrap .c-card {

        //width: 100%;
    }
*/
_:-ms-lang(x), .c-card.c-card {
  margin-right: -2px\9;
  margin-left: -2px\9;
}

.c-card--unpublished {
  opacity: 0.5;
  -webkit-filter: grayscale(1);
  filter: grayscale(1);
}

.c-card--unpublished::after {
  content: "Unpublished";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  padding: 3px;
  font-size: 0.75em;
  color: #fff;
  background-color: #000;
}

/*@include card-theme("card", (
    background-color: darken($f__base-ui-color, 20%),
    text-color: #fff
    )
);*/
/*

*/
/*
    The `height: 100%;` in the `.event` class below allows the event to fill it's container (if inside,
    say, a list-grid). However, it doesn't work in Safari OSX/iOS.
    Applying a `event-wrap` class to a list item to make those items flex-containers seems to work
    OK, but perhaps this would be better abstracted as a `fill-height` class or something?
*/
/*
$event-cta--border-width: 1px !default;
$event-cta--border-style: solid !default;
$event-cta--border-radius: 3px !default;
*/
/*
$event--link-color: false !default;
$event--link-color--alt: false !default;
$event--link-has-border-bottom: false !default;
$event--link-border-bottom: false !default;
$event--link-border-bottom--alt: false !default;

// If we've specified a link color for the event, but not an alt state (e.g. hover)
// then generate one
@if $event--link-color != false and $event--link-color--alt == false {
    $event--link-color--alt: darken($event--link-color, 10%) !default;;
}

// If we've specified a link color for the event, and we want bottom borders, generate the borders:
@if $event--link-color != false and $event--link-has-border-bottom != false {
    $event--link-border-bottom: 1px solid lighten($event--link-color, 20%) !default;
    $event--link-border-bottom--alt: 2px solid lighten($event--link-color--alt, 30%) !default;
}
*/
/*
$event-button--text-color: #fff !default;
$event-button--background-color: $event--base-color !default;
$event-button--background-color-alt: lighten($event--base-color, 20%) !default;
$event-button--border-color: darken($event--base-color, 20%) !default;
*/
/*
    IE11 needs this wrapper to behave properly.
    If you're not supporting IE11, you don't this this CSS or the HTML that goes with it.
*/
.c-event-wrap {
  display: -ms-flexbox;
  display: flex;
  height: 100%;
}

.c-event-wrap > .c-event {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

_:-ms-lang(x), .c-event.c-event {
  padding-left: 0\9;
  padding-right: 0\9;
}

_:-ms-lang(x), .c-event.c-event > * {
  margin-left: 2.4rem\9;
  margin-right: 2.4rem\9;
}

_:-ms-lang(x), .c-event.c-event .c-event__action {
  margin-right: 2.4rem\9;
}

/*
    Note featurettes should only appear in the main body and fill the width, so media queries are
    ok here - we don't need to worry about other contexts and container-queries.
*/
/*
$featurette-cta--border-width: 1px !default;
$featurette-cta--border-style: solid !default;
$featurette-cta--border-radius: 3px !default;
*/
/*
$featurette--link-color: false !default;
$featurette--link-color--alt: false !default;
$featurette--link-has-border-bottom: false !default;
$featurette--link-border-bottom: false !default;
$featurette--link-border-bottom--alt: false !default;

// If we've specified a link color for the featurette, but not an alt state (e.g. hover)
// then generate one
@if $featurette--link-color != false and $featurette--link-color--alt == false {
    $featurette--link-color--alt: darken($featurette--link-color, 10%) !default;;
}

// If we've specified a link color for the featurette, and we want bottom borders, generate the borders:
@if $featurette--link-color != false and $featurette--link-has-border-bottom != false {
    $featurette--link-border-bottom: 1px solid lighten($featurette--link-color, 20%) !default;
    $featurette--link-border-bottom--alt: 2px solid lighten($featurette--link-color--alt, 30%) !default;
}
*/
/*
$featurette-button--text-color: #fff !default;
$featurette-button--background-color: $featurette--base-color !default;
$featurette-button--background-color-alt: lighten($featurette--base-color, 20%) !default;
$featurette-button--border-color: darken($featurette--base-color, 20%) !default;
*/
/*
    IE11 needs this wrapper to behave properly.
    If you're not supporting IE11, you don't this this CSS or the HTML that goes with it.
*/
.c-featurette-wrap {
  display: -ms-flexbox;
  display: flex;
  height: 100%;
}

.c-featurette-wrap > .c-featurette {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.c-featurette.t-featurette--dark,
.c-featurette.t-featurette--dark * {
  background-color: #2d2136;
  color: #fff;
}

.c-featurette.t-featurette--light,
.c-featurette.t-featurette--light * {
  background-color: #ad96c0;
  color: #fff;
}

/*


*/
/*$glimpse--link-color: false !default;
$glimpse--link-has-border-bottom: false !default;
$glimpse--link-color--alt: false !default;
$glimpse--link-has-border-bottom: false !default;
$glimpse--link-border-bottom: false !default;
$glimpse--link-border-bottom--hover: false !default;*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
*/
/*
    Utilitarian text and links. E.g. footer, login info, skiplinks
    
    Utilitext links are prime candidates to have icons as part of the links text.
    However, the underline border doesn't work well with icons, so an additional span is used to
    wrap the link text (not the icon) regardless of whether or not there is an icon, since we can't 
    look inside elements with CSS.
*/
.c-utilitext.c-utilitext {
  font-size: 0.875em;
  margin: 0;
  padding: 0;
}

.c-utilitext.c-utilitext a[href] {
  border-width: 0;
  padding: 0;
  margin: 0;
}

.c-utilitext.c-utilitext a[href] span {
  border-width: 0 0 1px 0;
  border-style: solid;
  margin-bottom: -1px;
  padding-bottom: 2px;
}

.c-utilitext.c-utilitext a[href]:hover span, .c-utilitext.c-utilitext a[href]:active span, .c-utilitext.c-utilitext a[href]:focus span {
  border-style: dashed;
}

ul.c-utilitext, ol.c-utilitext {
  list-style: none;
  padding: 0;
  margin: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

ul.c-utilitext li, ol.c-utilitext li {
  margin: 0;
}

ul.c-utilitext li + li, ol.c-utilitext li + li {
  margin-left: 1em;
}

.c-utilitext.c-utilitext--skiplinks li {
  margin-left: 0;
  position: relative;
}

.c-utilitext.c-utilitext--skiplinks a[href] {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

.c-utilitext.c-utilitext--skiplinks a[href]:active, .c-utilitext.c-utilitext--skiplinks a[href]:focus {
  clip: auto;
  height: auto;
  overflow: visible;
  position: initial;
  white-space: inherit;
  width: auto;
}

.c-utilitext.c-utilitext--pale,
.c-utilitext.c-utilitext--pale a[href] {
  color: #666666;
}

.c-utilitext.c-utilitext--pale a[href]:hover span, .c-utilitext.c-utilitext--pale a[href]:active span, .c-utilitext.c-utilitext--pale a[href]:focus span {
  color: #333;
}

.c-utilitext.c-utilitext--smaller {
  font-size: 0.8125em;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| Decoration Patterns |--------------------------------------------------------------------- */
/*
Note - this won't work until SASS supports dynamic calling of mixins. It's close, but hasn't been
merged yet. Hoping that will be done soon so I can change this.

// List all the includes that should be called.
// Note that they're defined in the relevent pattern files, so it isn't ideal to list them here,
// but I don't know of another way of doing this yet.
// One idea could be that each pattern that needs to be theme-able adds it's own name to this list,
// (registers itself). This may work, but may come with it's own set of problems. Investigate.
$patterns: (
    bands-theme,
    page-header-theme,
    panel-theme,
    panel-theme--dark,
    primary-cta-theme
);
*/
/* - Waiting for SASS to support. Currently pseudo code.
@each $pattern in $patterns {
    @include $pattern (
        (
            name  : pru-mnhc,
            theme : $theme
        )
    );
}
*/
.d-background--very-light.t-pru-mnhc {
  background-color: #d1c6dd !important;
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc a[href] {
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc a[href]:hover,
.d-background--very-light.t-pru-mnhc a[href]:active,
.d-background--very-light.t-pru-mnhc a[href]:focus {
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--very-light.t-pru-mnhc a[href].c-cta:hover,
.d-background--very-light.t-pru-mnhc a[href].c-cta:active,
.d-background--very-light.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--light.t-pru-mnhc {
  background-color: #b7a6ca !important;
  color: #fff !important;
}

.d-background--light.t-pru-mnhc a[href] {
  color: #fff !important;
}

.d-background--light.t-pru-mnhc a[href]:hover,
.d-background--light.t-pru-mnhc a[href]:active,
.d-background--light.t-pru-mnhc a[href]:focus {
  color: #fff !important;
}

.d-background--light.t-pru-mnhc a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--light.t-pru-mnhc a[href].c-cta:hover,
.d-background--light.t-pru-mnhc a[href].c-cta:active,
.d-background--light.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background.t-pru-mnhc {
  background-color: #5d4777 !important;
  color: #fff !important;
}

.d-background.t-pru-mnhc a[href] {
  color: #fff !important;
}

.d-background.t-pru-mnhc a[href]:hover,
.d-background.t-pru-mnhc a[href]:active,
.d-background.t-pru-mnhc a[href]:focus {
  color: #fff !important;
}

.d-background.t-pru-mnhc a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background.t-pru-mnhc a[href].c-cta:hover,
.d-background.t-pru-mnhc a[href].c-cta:active,
.d-background.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--dark.t-pru-mnhc {
  background-color: #443457 !important;
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc a[href] {
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc a[href]:hover,
.d-background--dark.t-pru-mnhc a[href]:active,
.d-background--dark.t-pru-mnhc a[href]:focus {
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--dark.t-pru-mnhc a[href].c-cta:hover,
.d-background--dark.t-pru-mnhc a[href].c-cta:active,
.d-background--dark.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--very-dark.t-pru-mnhc {
  background-color: #2b2137 !important;
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc a[href] {
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc a[href]:hover,
.d-background--very-dark.t-pru-mnhc a[href]:active,
.d-background--very-dark.t-pru-mnhc a[href]:focus {
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--very-dark.t-pru-mnhc a[href].c-cta:hover,
.d-background--very-dark.t-pru-mnhc a[href].c-cta:active,
.d-background--very-dark.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--sloped.t-pru-mnhc {
  background: -moz-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: -webkit-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
}

.d-bands.t-pru-mnhc,
.d-bands--left.t-pru-mnhc,
.d-bands--right.t-pru-mnhc,
.d-bands--sides.t-pru-mnhc,
.d-bands--top.t-pru-mnhc,
.d-bands--above.t-pru-mnhc,
.d-bands--bottom.t-pru-mnhc,
.d-bands--below.t-pru-mnhc {
  border-color: #5d4777 !important;
}

.c-card .c-card__full-link.t-pru-mnhc,
.c-card .c-card__full-link.t-pru-mnhc:hover {
  background: #4c3a61;
}

.c-card.t-pru-mnhc,
.c-card.t-pru-mnhc .c-card__main {
  background-color: #5d4777;
}

.c-card.t-pru-mnhc .c-card__main .c-card__title,
.c-card.t-pru-mnhc .c-card__main .c-card__body,
.c-card.t-pru-mnhc .c-card__main .c-card__footer {
  color: #fff;
  background-color: #5d4777;
}

.c-card.t-pru-mnhc .c-card__main .c-card__title a[href],
.c-card.t-pru-mnhc .c-card__main .c-card__body a[href],
.c-card.t-pru-mnhc .c-card__main .c-card__footer a[href] {
  background-color: #5d4777;
  color: #fff;
}

.c-card.t-pru-mnhc .c-card__main .c-card__title a[href]:hover, .c-card.t-pru-mnhc .c-card__main .c-card__title a[href]:active, .c-card.t-pru-mnhc .c-card__main .c-card__title a[href]:focus,
.c-card.t-pru-mnhc .c-card__main .c-card__body a[href]:hover,
.c-card.t-pru-mnhc .c-card__main .c-card__body a[href]:active,
.c-card.t-pru-mnhc .c-card__main .c-card__body a[href]:focus,
.c-card.t-pru-mnhc .c-card__main .c-card__footer a[href]:hover,
.c-card.t-pru-mnhc .c-card__main .c-card__footer a[href]:active,
.c-card.t-pru-mnhc .c-card__main .c-card__footer a[href]:focus {
  background-color: #5d4777;
  color: #fff;
}

.c-card.t-pru-mnhc {
  border-color: #2b2137;
}

.c-featurette.t-pru-mnhc,
.c-featurette.t-pru-mnhc * {
  background-color: #5d4777;
  color: #fff;
}

/*.c-page-header.t-pru-mnhc {
		color: map-get($theme, text-color);
		background-color: map-get($theme, page-header-color);
	}*/
.c-panel.c-panel.t-pru-mnhc {
  color: #333;
  background: #5d4777;
}

.c-panel.c-panel.t-pru-mnhc a[href] {
  color: #333;
}

.c-panel.c-panel.t-pru-mnhc a[href]:hover,
.c-panel.c-panel.t-pru-mnhc a[href]:active,
.c-panel.c-panel.t-pru-mnhc a[href]:focus {
  color: #333;
}

.c-panel.c-panel.t-pru-mnhc a[href].c-cta {
  border-color: #333;
  color: #333;
  background-color: transparent;
}

.c-panel.c-panel.t-pru-mnhc a[href].c-cta:hover,
.c-panel.c-panel.t-pru-mnhc a[href].c-cta:active,
.c-panel.c-panel.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.c-primary-cta.t-pru-mnhc[href] {
  color: #ffffff;
  background-color: #5d4777;
}

.c-primary-cta.t-pru-mnhc[href]:hover, .c-primary-cta.t-pru-mnhc[href]:active, .c-primary-cta.t-pru-mnhc[href]:focus {
  color: #ffffff;
  /*@if is-int($f__button-background-color--alt) {
                @if $f__button-background-color--alt > 0 {
                    $f__button-background-color--alt_percent: $f__button-background-color--alt * 1%;
                    background-color: lighten(map-get($theme, cta-background-color), $f__button-background-color--alt_percent);
                }
                @if $f__button-background-color--alt < 0 {
                    $f__button-background-color--alt_percent: $f__button-background-color--alt * -1%;
                    background-color: darken(map-get($theme, cta-background-color), $f__button-background-color--alt_percent);
                }
            }
            */
  background-color: #443457;
}

.c-sign.t-pru-mnhc {
  background: -moz-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: -webkit-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
}

/*.t-pru-mnhc.t-color {
    color: #fff;
}*/
/*
.t-pru-mnhc button,
.t-pru-mnhc button.over-panel-control,
.t-pru-mnhc button.over-panel-control[aria-expanded=true] {*
.t-pru-mnhc button:not(.over-panel__overlay):not(.dropdown__button),
.t-pru-mnhc button:not(.over-panel__overlay)[aria-expanded=true] {
*/
button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button),
a[href].button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button),
a[href].c-cta.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button),
.cookie_notice__action button {
  border-color: #5d4777 !important;
  color: #ffffff !important;
  background-color: #5d4777 !important;
}

button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):hover, button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):active,
a[href].button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):hover,
a[href].button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):active,
a[href].c-cta.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):hover,
a[href].c-cta.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):active,
.cookie_notice__action button:hover,
.cookie_notice__action button:active {
  background-color: #443457 !important;
}

button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):focus,
a[href].button.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):focus,
a[href].c-cta.t-pru-mnhc:not(.over-panel__overlay):not(.dropdown__button):focus,
.cookie_notice__action button:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

table.t-pru-mnhc caption,
.t-pru-mnhc + .highcharts-data-table caption {
  background-color: #5d4777;
}

table.t-pru-mnhc th,
.t-pru-mnhc + .highcharts-data-table th {
  background-color: white;
}

table.t-pru-mnhc td,
.t-pru-mnhc + .highcharts-data-table td,
table.t-pru-mnhc th,
.t-pru-mnhc + .highcharts-data-table th {
  border: 1px solid #5d4777;
}

table.t-pru-mnhc tr:nth-child(odd) > td,
.t-pru-mnhc + .highcharts-data-table tr:nth-child(odd) > td,
table.t-pru-mnhc tr:nth-child(odd) > th,
.t-pru-mnhc + .highcharts-data-table tr:nth-child(odd) > th {
  background-color: white;
}

.t-pru-mnhc.nav-bar {
  background: -moz-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: -webkit-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
}

.t-pru-mnhc.subnav__items {
  background-color: #5d4777;
}

.t-pru-mnhc.over-panel__contents {
  background: -moz-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: -webkit-linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
  background: linear-gradient(45deg, #513d67 0%, #533f6a 50%, #584371 50%, #56416d 100%) !important;
}

/*
.t-pru-mnhc.search-form {
    background-color: map-get($theme, background-color);
}
*/
.t-pru-mnhc.search-form .search-form__submit {
  background-color: #513d67;
  /*&:hover,
    &:active,
    &:focus {
        @if is-int($f__button-background-color--alt) {
            @if $f__button-background-color--alt > 0 {
                $f__button-background-color--alt_percent: $f__button-background-color--alt * 1%;
                background-color: lighten(map-get($theme, background-color), $f__button-background-color--alt_percent);
            }
            @if $f__button-background-color--alt < 0 {
                $f__button-background-color--alt_percent: $f__button-background-color--alt * -1%;
                background-color: darken(map-get($theme, background-color), $f__button-background-color--alt_percent);
            }
        }
    }*/
}

.t-pru-mnhc.search-form .search-form__submit:hover, .t-pru-mnhc.search-form .search-form__submit:focus {
  background-color: #382a47;
}

.t-pru-mnhc.search-form .search-form__field {
  /*&:hover,
    &:active,
    &:focus {
        @if is-int($f__button-background-color--alt) {
            @if $f__button-background-color--alt > 0 {
                $f__button-background-color--alt_percent: $f__button-background-color--alt * 1%;
                background-color: lighten(map-get($theme, background-color), $f__button-background-color--alt_percent);
            }
            @if $f__button-background-color--alt < 0 {
                $f__button-background-color--alt_percent: $f__button-background-color--alt * -1%;
                background-color: darken(map-get($theme, background-color), $f__button-background-color--alt_percent);
            }
        }
    }*/
}

.t-pru-mnhc.search-form .search-form__field:hover, .t-pru-mnhc.search-form .search-form__field:focus {
  background-color: #f7f6f6;
}

input:not([type]):focus,
[type="color"]:focus,
[type="date"]:focus,
[type="datetime"]:focus,
[type="datetime-local"]:focus,
[type="file"]:focus,
[type="month"]:focus,
[type="number"]:focus,
[type="password"]:focus,
[type="search"]:focus,
[type="range"]:focus,
[type="tel"]:focus,
[type="text"]:focus,
[type="time"]:focus,
[type="url"]:focus,
[type="week"]:focus {
  box-shadow: 0 0 0 3px #644d81;
}

/*
        Without custom styling (appearance: none), Safari doesn't apply the shadow, so breaks
        accessibility ...
    */
[type="checkbox"]:focus,
[type="radio"]:focus {
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

/* - Don't do this, it's too generic and results in equal specificity that's resolved in source
    order, thus later themes win out, causing problems.
.t-pru-mnhc a[href] {

    border-color: map-get($theme, border-color);
    color: #fff;
    background-color: map-get($theme, background-color);

    &:hover,
    &:active,
    &:focus {
        color: #fff;
    }
}
*/
/*
:not(.overpanel) .t-pru-mnhc a[href].c-cta {

    border-color: map-get($theme, border-color);
    color: #fff;
    background-color: transparent;
    //background-color: map-get($theme, background-color);
    content: "pru-mnhc";

    &:hover,
    &:active,
    &:focus {
        @if color_light_or_dark(map-get($theme, background-color)) == 'light' {
            background-color: rgba(0,0,0,0.2);
        } @else {
            background-color: rgba(255,255,255,0.2);
        }


        //background-color: lighten(map-get($theme, border-color), 65%);
    }
}
*/
/*
.t-pru-mnhc.d-50-50-background {
    background: #FFFFFF;
    background: -moz-linear-gradient(left, map-get($theme, background-color) 0%, map-get($theme, background-color) 50%, #ffffff 50%, #ffffff 100%);
    background: -webkit-linear-gradient(left, map-get($theme, background-color) 0%,map-get($theme, background-color) 50%,#ffffff 50%,#ffffff 100%);
    background: linear-gradient(to right, map-get($theme, background-color) 0%,map-get($theme, background-color) 50%,#ffffff 50%,#ffffff 100%);
}

.t-pru-mnhc.d-50-50-background--flipped {
    background: #FFFFFF;
    background: -moz-linear-gradient(left, #ffffff 0%, #ffffff 50%, map-get($theme, background-color) 50%, map-get($theme, background-color) 100%);
    background: -webkit-linear-gradient(left, #ffffff 0%,#ffffff 50%,map-get($theme, background-color) 50%,map-get($theme, background-color) 100%);
    background: linear-gradient(to right, #ffffff 0%,#ffffff 50%,map-get($theme, background-color) 50%,map-get($theme, background-color) 100%);
}
*/
.d-background--very-light.t-pru-mnhc--alt {
  background-color: #fefdfc !important;
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc--alt a[href] {
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc--alt a[href]:hover,
.d-background--very-light.t-pru-mnhc--alt a[href]:active,
.d-background--very-light.t-pru-mnhc--alt a[href]:focus {
  color: #fff !important;
}

.d-background--very-light.t-pru-mnhc--alt a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--very-light.t-pru-mnhc--alt a[href].c-cta:hover,
.d-background--very-light.t-pru-mnhc--alt a[href].c-cta:active,
.d-background--very-light.t-pru-mnhc--alt a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--light.t-pru-mnhc--alt {
  background-color: #eee6d8 !important;
  color: #fff !important;
}

.d-background--light.t-pru-mnhc--alt a[href] {
  color: #fff !important;
}

.d-background--light.t-pru-mnhc--alt a[href]:hover,
.d-background--light.t-pru-mnhc--alt a[href]:active,
.d-background--light.t-pru-mnhc--alt a[href]:focus {
  color: #fff !important;
}

.d-background--light.t-pru-mnhc--alt a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--light.t-pru-mnhc--alt a[href].c-cta:hover,
.d-background--light.t-pru-mnhc--alt a[href].c-cta:active,
.d-background--light.t-pru-mnhc--alt a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background.t-pru-mnhc--alt {
  background-color: #b9975b !important;
  color: #fff !important;
}

.d-background.t-pru-mnhc--alt a[href] {
  color: #fff !important;
}

.d-background.t-pru-mnhc--alt a[href]:hover,
.d-background.t-pru-mnhc--alt a[href]:active,
.d-background.t-pru-mnhc--alt a[href]:focus {
  color: #fff !important;
}

.d-background.t-pru-mnhc--alt a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background.t-pru-mnhc--alt a[href].c-cta:hover,
.d-background.t-pru-mnhc--alt a[href].c-cta:active,
.d-background.t-pru-mnhc--alt a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--dark.t-pru-mnhc--alt {
  background-color: #9e7d43 !important;
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc--alt a[href] {
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc--alt a[href]:hover,
.d-background--dark.t-pru-mnhc--alt a[href]:active,
.d-background--dark.t-pru-mnhc--alt a[href]:focus {
  color: #fff !important;
}

.d-background--dark.t-pru-mnhc--alt a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--dark.t-pru-mnhc--alt a[href].c-cta:hover,
.d-background--dark.t-pru-mnhc--alt a[href].c-cta:active,
.d-background--dark.t-pru-mnhc--alt a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--very-dark.t-pru-mnhc--alt {
  background-color: #7a6134 !important;
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc--alt a[href] {
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc--alt a[href]:hover,
.d-background--very-dark.t-pru-mnhc--alt a[href]:active,
.d-background--very-dark.t-pru-mnhc--alt a[href]:focus {
  color: #fff !important;
}

.d-background--very-dark.t-pru-mnhc--alt a[href].c-cta {
  border-color: #fff !important;
  color: #fff !important;
  background-color: transparent !important;
}

.d-background--very-dark.t-pru-mnhc--alt a[href].c-cta:hover,
.d-background--very-dark.t-pru-mnhc--alt a[href].c-cta:active,
.d-background--very-dark.t-pru-mnhc--alt a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1) !important;
}

.d-background--sloped.t-pru-mnhc--alt {
  background: -moz-linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
  background: -webkit-linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
  background: linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
}

.c-sign.t-pru-mnhc--alt {
  background: -moz-linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
  background: -webkit-linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
  background: linear-gradient(45deg, #b08b4b 0%, #b38e4d 50%, #b69254 50%, #b49050 100%) !important;
}

.c-panel.c-panel--very-light.t-pru-mnhc {
  color: #333;
  background: #d1c6dd;
}

.c-panel.c-panel--very-light.t-pru-mnhc a[href] {
  color: #333;
}

.c-panel.c-panel--very-light.t-pru-mnhc a[href]:hover,
.c-panel.c-panel--very-light.t-pru-mnhc a[href]:active,
.c-panel.c-panel--very-light.t-pru-mnhc a[href]:focus {
  color: #333;
}

.c-panel.c-panel--very-light.t-pru-mnhc a[href].c-cta {
  border-color: #333;
  color: #333;
  background-color: transparent;
}

.c-panel.c-panel--very-light.t-pru-mnhc a[href].c-cta:hover,
.c-panel.c-panel--very-light.t-pru-mnhc a[href].c-cta:active,
.c-panel.c-panel--very-light.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.c-card--very-light .c-card__full-link.t-pru-mnhc,
.c-card--very-light .c-card__full-link.t-pru-mnhc:hover {
  background: #4c3a61;
}

.c-card--very-light.t-pru-mnhc,
.c-card--very-light.t-pru-mnhc .c-card__main {
  background-color: #5d4777;
}

.c-card--very-light.t-pru-mnhc .c-card__main .c-card__title,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__body,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__footer {
  color: #333;
  background-color: #5d4777;
}

.c-card--very-light.t-pru-mnhc .c-card__main .c-card__title a[href],
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__body a[href],
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__footer a[href] {
  background-color: #5d4777;
  color: #333;
}

.c-card--very-light.t-pru-mnhc .c-card__main .c-card__title a[href]:hover, .c-card--very-light.t-pru-mnhc .c-card__main .c-card__title a[href]:active, .c-card--very-light.t-pru-mnhc .c-card__main .c-card__title a[href]:focus,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__body a[href]:hover,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__body a[href]:active,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__body a[href]:focus,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__footer a[href]:hover,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__footer a[href]:active,
.c-card--very-light.t-pru-mnhc .c-card__main .c-card__footer a[href]:focus {
  background-color: #5d4777;
  color: #333;
}

.c-card--very-light.t-pru-mnhc {
  border-color: #2b2137;
}

.c-panel.c-panel--light.t-pru-mnhc {
  color: #333;
  background: #b7a6ca;
}

.c-panel.c-panel--light.t-pru-mnhc a[href] {
  color: #333;
}

.c-panel.c-panel--light.t-pru-mnhc a[href]:hover,
.c-panel.c-panel--light.t-pru-mnhc a[href]:active,
.c-panel.c-panel--light.t-pru-mnhc a[href]:focus {
  color: #333;
}

.c-panel.c-panel--light.t-pru-mnhc a[href].c-cta {
  border-color: #333;
  color: #333;
  background-color: transparent;
}

.c-panel.c-panel--light.t-pru-mnhc a[href].c-cta:hover,
.c-panel.c-panel--light.t-pru-mnhc a[href].c-cta:active,
.c-panel.c-panel--light.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.c-card--light .c-card__full-link.t-pru-mnhc,
.c-card--light .c-card__full-link.t-pru-mnhc:hover {
  background: #4c3a61;
}

.c-card--light.t-pru-mnhc,
.c-card--light.t-pru-mnhc .c-card__main {
  background-color: #5d4777;
}

.c-card--light.t-pru-mnhc .c-card__main .c-card__title,
.c-card--light.t-pru-mnhc .c-card__main .c-card__body,
.c-card--light.t-pru-mnhc .c-card__main .c-card__footer {
  color: #333;
  background-color: #5d4777;
}

.c-card--light.t-pru-mnhc .c-card__main .c-card__title a[href],
.c-card--light.t-pru-mnhc .c-card__main .c-card__body a[href],
.c-card--light.t-pru-mnhc .c-card__main .c-card__footer a[href] {
  background-color: #5d4777;
  color: #333;
}

.c-card--light.t-pru-mnhc .c-card__main .c-card__title a[href]:hover, .c-card--light.t-pru-mnhc .c-card__main .c-card__title a[href]:active, .c-card--light.t-pru-mnhc .c-card__main .c-card__title a[href]:focus,
.c-card--light.t-pru-mnhc .c-card__main .c-card__body a[href]:hover,
.c-card--light.t-pru-mnhc .c-card__main .c-card__body a[href]:active,
.c-card--light.t-pru-mnhc .c-card__main .c-card__body a[href]:focus,
.c-card--light.t-pru-mnhc .c-card__main .c-card__footer a[href]:hover,
.c-card--light.t-pru-mnhc .c-card__main .c-card__footer a[href]:active,
.c-card--light.t-pru-mnhc .c-card__main .c-card__footer a[href]:focus {
  background-color: #5d4777;
  color: #333;
}

.c-card--light.t-pru-mnhc {
  border-color: #2b2137;
}

.c-panel.c-panel--dark.t-pru-mnhc {
  color: #fff;
  background: #443457;
}

.c-panel.c-panel--dark.t-pru-mnhc a[href] {
  color: #fff;
}

.c-panel.c-panel--dark.t-pru-mnhc a[href]:hover,
.c-panel.c-panel--dark.t-pru-mnhc a[href]:active,
.c-panel.c-panel--dark.t-pru-mnhc a[href]:focus {
  color: #fff;
}

.c-panel.c-panel--dark.t-pru-mnhc a[href].c-cta {
  border-color: #fff;
  color: #fff;
  background-color: transparent;
}

.c-panel.c-panel--dark.t-pru-mnhc a[href].c-cta:hover,
.c-panel.c-panel--dark.t-pru-mnhc a[href].c-cta:active,
.c-panel.c-panel--dark.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.c-panel.c-panel--very-dark.t-pru-mnhc {
  color: #fff;
  background: #2b2137;
}

.c-panel.c-panel--very-dark.t-pru-mnhc a[href] {
  color: #fff;
}

.c-panel.c-panel--very-dark.t-pru-mnhc a[href]:hover,
.c-panel.c-panel--very-dark.t-pru-mnhc a[href]:active,
.c-panel.c-panel--very-dark.t-pru-mnhc a[href]:focus {
  color: #fff;
}

.c-panel.c-panel--very-dark.t-pru-mnhc a[href].c-cta {
  border-color: #fff;
  color: #fff;
  background-color: transparent;
}

.c-panel.c-panel--very-dark.t-pru-mnhc a[href].c-cta:hover,
.c-panel.c-panel--very-dark.t-pru-mnhc a[href].c-cta:active,
.c-panel.c-panel--very-dark.t-pru-mnhc a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.t-pru-mnhc img[src*="/img/avatars/"],
.t-pru-mnhc [data-contains~="portrait"] img {
  border-color: #5d4777 !important;
}

.t-pru-mnhc div[data-display-as="themed-box"] {
  background: #5d4777;
}

.t-pru-mnhc div[data-display-as="themed-box"] a[href].c-cta:hover,
.t-pru-mnhc div[data-display-as="themed-box"] a[href].c-cta:active,
.t-pru-mnhc div[data-display-as="themed-box"] a[href].c-cta:focus {
  background-color: rgba(255, 255, 255, 0.1);
}

.t-pru-mnhc summary:focus {
  outline: 2px solid rgba(255, 255, 255, 0.5);
}

[data-brand="pru-mnhc"] [data-display-as~="themed-box--background"],
[data-brand="pru-mnhc"] [data-display-as~="themed-box--border"] {
  color: #5d4777;
}

[data-brand="pru-mnhc"] [data-display-as~="themed-box--background"] > * {
  color: #fff;
}

[data-brand="pru-mnhc"] [data-display-as~="themed-box--border"] > * {
  color: #333;
}

/* ---------------------------------------------------------------------------------------------- */
